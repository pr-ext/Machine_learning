# -*- coding: utf-8 -*-
"""machine_learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fEdXefFsDUTuP-braNlLdmpR-OBvwfA5
"""

import numpy as np
import pandas as pd

data=pd.read_csv('labdata.csv')

matrix_a = data.iloc[:,1:4].to_numpy()
matrix_c = data.iloc[:,4:5].to_numpy()
print("the matrix a is \n",matrix_a)
print("the matrix c is \n",matrix_c)

dim = data.shape[1]
print("the dimensionality of the vector space for this data is",dim)
# no of columns

vec = data.shape[0]
print("the number of vectors exist in this vector space is ",vec)
# no of rows

rank = np.linalg.matrix_rank(matrix_a)
print("the rank of the matrix is", rank)

pseudo_inverse = np.linalg.pinv(matrix_a)
cost = np.dot(pseudo_inverse, matrix_c)
print("the cost of each product is \n", cost)

pseudo_inverse = np.linalg.pinv(matrix_a)
model_vector = np.dot(pseudo_inverse, matrix_c)
print("The model vector X for predicting the cost of the products is:")
print(model_vector)

data['Purchase behaviour'] = ''
print(data)

data['Purchase behaviour'] = np.where(data['Payment (Rs)'] > 200, 'RICH', 'POOR')
print(data)

data2=pd.read_csv('labdata2.csv')

print(data2)

import statistics as s
import matplotlib.pyplot as plt

price_mean = data2['Price'].mean()
price_var = data2['Price'].var()
print("the mean of the price data is ",price_mean)
print("the variance of the price data is ",price_var)

wed_data= data2[data2['Day']=='Wed']
Wed_mean=s.mean(wed_data['Price'])
print("The sample mean of the Price data for Wednesdays is:", Wed_mean)
print("the difference in mean is",price_mean-Wed_mean)

apr_data= data2[data2['Month']=='Apr']
apr_mean=s.mean(apr_data['Price'])
print("The sample mean of the Price data for April is:", apr_mean)
print("the difference in mean is",price_mean-apr_mean)

negatives = data2['Chg%'].apply(lambda x: x < 0)
probability = negatives.sum() / len(data2)
print("The probability of making a loss over the stock is:", probability)

total_wed=len(wed_data)
profit=len(wed_data[wed_data['Chg%']>0])
prob=profit/total_wed
print("The probability of making a profit on Wednesday is:", prob)

prob_wed = len(data2[data2['Day'] == 'Wed']) / len(data2)
conditional_prblty = profit / len(wed_data)
print("The conditional probability of making a profit on Wednesday is:", conditional_prblty)

plt.scatter(data2['Day'],data2['Chg%'])
plt.xlabel('Day of the Week')
plt.ylabel('Mean Chg%')
plt.title('Scatter Plot of Chg% Data Against Day of the Week')
plt.show()